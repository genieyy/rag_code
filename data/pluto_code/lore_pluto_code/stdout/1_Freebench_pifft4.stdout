param_name: ITERATIONS
param_val: 10000

param_name: n
param_val: 100000

CONTEXT
2 5 0 0 0 3
# e/i| P1   P2   P3 |  1  
   1    1    0    0 -10000    ## P1-10000 >= 0
   1    0    1    0 -100000    ## P2-100000 >= 0
[zyj-debug] Before affine transformations
S1 "out[j] = out[j - shift];"
ndims: 2; orig_depth: 2
iterators: iter, j
Index set
Set #1
[5 dims; 6 constraints]
iter >= 0
-iter+ITERA-1 >= 0
ITERA-1 >= 0
-j+n >= 0
j-shift-1 >= 0
n-shift-1 >= 0

T(S1): (0, iter, 0, -j, 0)
loop types (loop, loop, loop, loop, loop)

Read accesses
out[j-shift]
Write accesses
out[j]
Original loop: 0 -> yes
Original loop: 1 -> yes

--- Dep 1 from S1 to S1; satisfied: 0, sat level: -1; Type: RAW
on variable: out
Dependence polyhedron
Set #1
[7 dims; 10 constraints]
-j+j'-shift = 0
iter >= 0
j-1 >= 0
ITERA-10000 >= 0
-j+n >= 0
j-shift-1 >= 0
-j+n-shift >= 0
n-100000 >= 0
-iter+iter'-1 >= 0
-iter'+ITERA-1 >= 0


--- Dep 2 from S1 to S1; satisfied: 0, sat level: -1; Type: RAW
on variable: out
Dependence polyhedron
Set #1
[7 dims; 9 constraints]
-j+j'-shift = 0
-iter+iter' = 0
iter >= 0
-iter+ITERA-1 >= 0
ITERA-10000 >= 0
-j+n >= 0
-shift-1 >= 0
j-1 >= 0
n-100000 >= 0


--- Dep 3 from S1 to S1; satisfied: 0, sat level: -1; Type: WAR
on variable: out
Dependence polyhedron
Set #1
[7 dims; 10 constraints]
-j+j'+shift = 0
iter >= 0
j-2shift-1 >= 0
ITERA-10000 >= 0
-j+n >= 0
j-shift-1 >= 0
-j+n+shift >= 0
n-100000 >= 0
-iter+iter'-1 >= 0
-iter'+ITERA-1 >= 0


--- Dep 4 from S1 to S1; satisfied: 0, sat level: -1; Type: WAR
on variable: out
Dependence polyhedron
Set #1
[7 dims; 9 constraints]
-j+j'+shift = 0
-iter+iter' = 0
iter >= 0
-iter+ITERA-1 >= 0
ITERA-10000 >= 0
-j+n >= 0
shift-1 >= 0
j-2shift-1 >= 0
n-100000 >= 0


--- Dep 5 from S1 to S1; satisfied: 0, sat level: -1; Type: WAW
on variable: out
Dependence polyhedron
Set #1
[7 dims; 11 constraints]
-j+j' = 0
iter >= 0
-iter+ITERA-1 >= 0
ITERA-10000 >= 0
-j+n >= 0
j-shift-1 >= 0
n-shift-1 >= 0
n-100000 >= 0
iter' >= 0
-iter'+ITERA-1 >= 0
-iter+iter'-1 >= 0


[pluto] WARNING: working with original (identity) transformation (if they exist)
[zyj-debug] After affine transformations
T(S1): (0, iter, 0, -j, 0)
loop types (scalar, loop, scalar, loop, scalar)

t1 --> parallel scalar (band 0)no-ujam
t2 --> fwd_dep  loop   (band 0)no-ujam
t3 --> parallel scalar (band 0)no-ujam
t4 --> fwd_dep  loop   (band 1)no-ujam
t5 --> parallel scalar (band 1)no-ujam

