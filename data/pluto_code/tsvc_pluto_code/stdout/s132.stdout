param_name: iterations
param_val: 100000

param_name: LEN_1D
param_val: 32000

param_name: LEN_2D
param_val: 256

CONTEXT
2 6 0 0 0 4
# e/i| P1   P2   P3   P4 |  1  
   1    1    0    0    0 -100000    ## P1-100000 >= 0
   1    0    1    0    0 -256    ## P2-256 >= 0
[zyj-debug] Before affine transformations
S1 "aa[j][i] = aa[k][i-1] + b[i] * c[1];"
ndims: 2; orig_depth: 2
iterators: nl, i
Index set
Set #1
[6 dims; 6 constraints]
nl >= 0
-nl+400itera-1 >= 0
400itera-1 >= 0
i-1 >= 0
-i+LEN_2-1 >= 0
LEN_2-2 >= 0

T(S1): (0, nl, 0, i, 0)
loop types (loop, loop, loop, loop, loop)

Read accesses
aa[k][i-1]
b[i]
c[1]
Write accesses
aa[j][i]
Original loop: 0 -> yes
Original loop: 1 -> yes

S2 "dummy(a, b, c, d, e, aa, bb, cc, 0.);"
ndims: 1; orig_depth: 1
iterators: nl
Index set
Set #1
[5 dims; 3 constraints]
nl >= 0
-nl+400itera-1 >= 0
400itera-1 >= 0

T(S2): (0, nl, 1, 0, 0)
loop types (loop, loop, loop, scalar, scalar)

Read accesses
a[0]
b[0]
c[0]
d[0]
e[0]
aa[0]
bb[0]
cc[0]
No write access
Original loop: 0 -> yes

--- Dep 1 from S1 to S1; satisfied: 0, sat level: -1; Type: RAW
on variable: aa
Dependence polyhedron
Set #1
[8 dims; 9 constraints]
-i+i'-1 = 0
-j+k = 0
nl >= 0
-nl'+400itera-1 >= 0
itera-100000 >= 0
i-1 >= 0
-i+LEN_2-2 >= 0
LEN_2-256 >= 0
-nl+nl' >= 0


--- Dep 2 from S1 to S1; satisfied: 0, sat level: -1; Type: WAR
on variable: aa
Dependence polyhedron
Set #1
[8 dims; 11 constraints]
-i+i'+1 = 0
-j+k = 0
nl >= 0
-nl+400itera-1 >= 0
itera-100000 >= 0
i-2 >= 0
-i+LEN_2-1 >= 0
LEN_2-256 >= 0
nl' >= 0
-nl'+400itera-1 >= 0
-nl+nl'-1 >= 0


--- Dep 3 from S1 to S1; satisfied: 0, sat level: -1; Type: WAW
on variable: aa
Dependence polyhedron
Set #1
[8 dims; 10 constraints]
-i+i' = 0
nl >= 0
-nl+400itera-1 >= 0
itera-100000 >= 0
i-1 >= 0
-i+LEN_2-1 >= 0
LEN_2-256 >= 0
nl' >= 0
-nl'+400itera-1 >= 0
-nl+nl'-1 >= 0


[zyj-debug] After affine transformations
T(S1): (zT2, zT3, nl, nl+i)
loop types (loop, loop, loop, loop)

T(S2): (zT1, 0, nl, 0)
loop types (loop, scalar, loop, scalar)

t1 --> fwd_dep  loop   (band 0)no-ujam
t2 --> fwd_dep  loop   (band 0)no-ujam
t3 --> fwd_dep  loop   (band 0)no-ujam
t4 --> fwd_dep  loop   (band 0)no-ujam

